apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish' // Apply this plugin at the top of your library build.gradle

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

def getVersionName = { ->
    return "1.0.7" // Replace with version Name
}

def getArtificatId = { ->
    return "basestructure" // Replace with library name ID
}


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    dataBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}


dependencies {
    def anko_version = "0.10.8"
    def koin_version = '2.0.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //http connection libs
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"


    api "org.koin:koin-core:$koin_version"
    api "org.koin:koin-core:$koin_version"
    api "org.koin:koin-core-ext:$koin_version"
    api "org.koin:koin-android:$koin_version"
    api "org.koin:koin-androidx-viewmodel:$koin_version"

    api 'androidx.recyclerview:recyclerview:1.1.0'
    api "org.jetbrains.anko:anko:$anko_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'

    api 'androidx.multidex:multidex:2.0.1'
    implementation 'com.tapadoo.android:alerter:3.0.2'
    implementation 'com.androidadvance:topsnackbar:1.1.1'
    implementation 'androidx.paging:paging-runtime:2.1.0'
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.enefce.libraries' // Replace with group ID
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/mfpolat/starter")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}